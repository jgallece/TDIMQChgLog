##
## This file is read by ibmditk/ibmdisrv on startup
##
## Enter <name>=<value> to set system properties.
## Enter !include <file | url> to include other files
##

com.ibm.di.securityTransformation=DES/ECB/NoPadding

##
## Modify the line below to add your own jar/zip files.
## The property may specify several directories or jar files, separated by the Java Property "path.separator",
## which is ":" on Linux and ";" on Windows
## Directories will be searched recursively by the TDILoader for jar files containing classes and resources.
## Only files with a ".zip" or ".jar" extension are searched.
# com.ibm.di.loader.userjars=c:\myjars

##
## Modify the line below to enable the config autoload feature. When this property is defined, the "ibmdisrv -d" command
## line will look for *.xml files in the directory specified by this property and start each one.
##
# com.ibm.di.server.autoload=autoload.tdi

##
## SYSTEM STORE
##

## Location of the database (embedded mode) - Cloudscape 10
#com.ibm.di.store.database=TDISysStore
#com.ibm.di.store.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver
#com.ibm.di.store.jdbc.urlprefix=jdbc:derby:
#com.ibm.di.store.jdbc.user=APP
#{protect}-com.ibm.di.store.jdbc.password=APP


## Location of the database to connect (networked mode) - Cloudscape 10 - DerbyClient driver
## The macro $soldir$ will be replaced by the value of the actual Solution Directory
com.ibm.di.store.database=jdbc:derby://localhost:1527/$soldir$/TDISysStore;create=true
com.ibm.di.store.jdbc.driver=org.apache.derby.jdbc.ClientDriver
com.ibm.di.store.jdbc.urlprefix=jdbc:derby://localhost:1527/
com.ibm.di.store.jdbc.user=APP
{protect}-com.ibm.di.store.jdbc.password={encr}OAXC2lzy+DO3K7qcqRzFLCu6jbBCXc+Ro+X0rpXqtMvBGJt8m2SPq9AL/VcH0MgzaRZRD7W190v/xTW9bcsMtpIlgOgnYYErwVdizwwCQ5UoHlBhzTxjLPBbB1lYPfvR4ekUDap67q36IodNkyj+of9COnVNejn5LF0C6vA07rs=

#
## Derby (Cloudscape) properties required for enabling authentication
#
derby.drda.startNetworkServer=true
derby.connection.requireAuthentication=true
derby.authentication.provider=BUILTIN
derby.database.defaultConnectionMode=fullAccess

#
## Details for starting Cloudscape in network mode.
## Note: If the com.ibm.di.store.hostname is set to localhost then remote connections will not be allowed.
## If it is set to the IP address of the local machine - then remote clients can access this Cloudscape
## instance by mentioning the IP address. The network server can only be started for the local machine.
#
#com.ibm.di.store.start.mode=automatic
com.ibm.di.store.hostname=localhost
com.ibm.di.store.port=1527
com.ibm.di.store.sysibm=true


# the varchar(length) for the ID columns used in system store and pes connector tables
com.ibm.di.store.varchar.length=512


## create statements for system store tables (CloudScape 5.1)
#com.ibm.di.store.create.delta.systable=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, VERSION int)
#com.ibm.di.store.create.delta.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, ENTRY long varbinary )
#com.ibm.di.store.create.property.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY long varbinary )
#com.ibm.di.store.create.sandbox.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY long varbinary )

## create statements for system store tables (CloudScape 10)
com.ibm.di.store.create.delta.systable=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, VERSION int);ALTER TABLE {0} ADD CONSTRAINT IDI_CS_{UNIQUE} PRIMARY KEY (ID)
com.ibm.di.store.create.delta.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, ENTRY BLOB );ALTER TABLE {0} ADD CONSTRAINT IDI_DS_{UNIQUE} Primary Key (ID)
com.ibm.di.store.create.property.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY BLOB );ALTER TABLE {0} ADD CONSTRAINT IDI_PS_{UNIQUE} Primary Key (ID)
com.ibm.di.store.create.sandbox.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY BLOB )
com.ibm.di.store.create.recal.conops=CREATE TABLE {0} (METHOD varchar(VARCHAR_LENGTH), RESULT BLOB, ERROR BLOB)


## create statements for system store tables DB2 on z/OS
#com.ibm.di.store.create.delta.systable=CREATE TABLESPACE TS1DSYS LOCKSIZE ROW BUFFERPOOL BP32K;CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, VERSION int) IN TS1DSYS;CREATE UNIQUE INDEX DSTIX1 ON {0} (ID ASC);ALTER TABLE {0} ADD CONSTRAINT IDI_DT_{UNIQUE} PRIMARY KEY (ID)
#com.ibm.di.store.create.delta.store=CREATE TABLESPACE TS1DST LOCKSIZE ROW BUFFERPOOL BP32K;CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, SEQUENCEID int, ENTRY BLOB) IN TS1DST; CREATE UNIQUE INDEX DSIX1 ON {0} (ID ASC); ALTER TABLE {0} ADD CONSTRAINT IDI_DS_{UNIQUE} Primary Key (ID);CREATE LOB TABLESPACE DSENT11 BUFFERPOOL BP32K LOCKSIZE LOB;CREATE AUX TABLE TBDSEN1 IN DSENT11 STORES {0} COLUMN ENTRY;CREATE INDEX IXEN1 ON TBDSEN1
#com.ibm.di.store.create.property.store=CREATE TABLESPACE PS3DST LOCKSIZE ROW BUFFERPOOL BP32K;CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY BLOB) IN PS3DST;CREATE UNIQUE INDEX PSIX3 ON {0} (ID ASC);ALTER TABLE {0} ADD CONSTRAINT IDI_PS_{UNIQUE} Primary Key (ID);CREATE LOB TABLESPACE PSENT31 BUFFERPOOL BP32K LOCKSIZE LOB;CREATE AUX TABLE TBPSEN3 IN PSENT31 STORES {0} COLUMN ENTRY;CREATE INDEX PSIXEN3 ON TBPSEN3
#com.ibm.di.store.create.sandbox.store=CREATE TABLE {0} (ID VARCHAR(VARCHAR_LENGTH) NOT NULL, ENTRY BLOB)
#com.ibm.di.store.create.recal.conops=CREATE TABLESPACE IM{UNIQUE} LOCKSIZE ROW BUFFERPOOL BP32K;CREATE TABLE {0} (METHOD VARCHAR(VARCHAR_LENGTH), RESULT BLOB, ERROR BLOB) IN IM{UNIQUE};CREATE LOB TABLESPACE LB{UNIQUE} BUFFERPOOL BP32K LOCKSIZE LOB;CREATE AUX TABLE AT{UNIQUE} IN LB{UNIQUE} STORES {0} COLUMN RESULT;CREATE INDEX IX{UNIQUE} ON AT{UNIQUE};CREATE LOB TABLESPACE LS{UNIQUE} BUFFERPOOL BP32K LOCKSIZE LOB;CREATE AUX TABLE AE{UNIQUE} IN LS{UNIQUE} STORES {0} COLUMN ERROR;CREATE INDEX IN{UNIQUE} ON AE{UNIQUE}


# Set a customized SQL statement for creation of the Tombstone Manager table. Keep the same table and field names. This is the default Derby statement.
#com.ibm.di.store.create.tombstones=CREATE TABLE IDI_TOMBSTONE ( ID INT GENERATED ALWAYS AS IDENTITY, COMPONENT_TYPE_ID INT, EVENT_TYPE_ID INT, START_TIME TIMESTAMP, CREATED_ON TIMESTAMP, COMPONENT_NAME VARCHAR(1024), CONFIGURATION VARCHAR(1024), EXIT_CODE INT, ERROR_DESCR VARCHAR(1024), STATS LONG VARCHAR FOR BIT DATA, GUID VARCHAR(1024) NOT NULL, USER_MESSAGE VARCHAR(1024), UNIQUE (ID, GUID))

# The following two SQL statements could be used when SolidDB is used as System Store
#com.ibm.di.store.create.tombstones=CREATE TABLE IDI_TOMBSTONE (ID INT PRIMARY KEY, COMPONENT_TYPE_ID INT, EVENT_TYPE_ID INT, START_TIME TIMESTAMP, CREATED_ON TIMESTAMP, COMPONENT_NAME VARCHAR(1024), CONFIGURATION VARCHAR(1024), EXIT_CODE INT, ERROR_DESCR VARCHAR(1024), STATS LONG VARBINARY, GUID VARCHAR(1024) NOT NULL, USER_MESSAGE VARCHAR(1024), UNIQUE (ID, GUID));CREATE SEQUENCE IDI_TOMBSTONE_SEQ
#com.ibm.di.store.update.tombstones=INSERT INTO IDI_TOMBSTONE (ID, COMPONENT_TYPE_ID, EVENT_TYPE_ID, START_TIME, CREATED_ON, COMPONENT_NAME, CONFIGURATION, EXIT_CODE, ERROR_DESCR, STATS, GUID, USER_MESSAGE) VALUES (IDI_TOMBSTONE_SEQ.NEXT, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

# the ibmsnap_commitseq column name used by the RDBMS changelog connector
com.ibm.di.conn.rdbmschlog.cdcolname=ibmsnap_commitseq

## server authentication
#javax.net.ssl.trustStore=serverapi/testadmin.jks
##javax.net.ssl.trustStore=c:/WS1/CATHYkey.jks
##javax.net.ssl.trustStorePassword=password
##{protect}-javax.net.ssl.trustStorePassword={encr}KM1yfbjeNWwFnBKnr6T7hgMbV76ZOWyj0RgMWc2L0quvvBvEO1I3+RWmeKPez8lYKViVQzsRsabDxTLITxa4Vdbrc9xFNyI9vageBmpsZt7shcYFadzuWebsq2JDrmSlFa3vxccqcDpJ3wMzrJiqNDky1IawqRMJjuUUs8QZ5iY=
javax.net.ssl.trustStoreType=jks

## client authentication
##javax.net.ssl.trustStore=c:/WS1/CATHYkey.jks
##javax.net.ssl.trustStorePassword=password
##javax.net.ssl.keyStore=serverapi/testadmin.jks
##{protect}-javax.net.ssl.keyStorePassword={encr}CerHxSmSJXENTyKPa0JI1ujHLQ7UlX0v1qqrF25mUQrcUAjVhZv5cnrGu7DdEAP8jfn8q4tK5QXR4IJUgn5jIUeRa78gXby0WRi7R+73NyzzUYeR15bymJD7mTtrCjGhHkKTPjbGMyCNLVVd6645x1GrynypmwOLF8NbqQ3ZXZU=
javax.net.ssl.keyStoreType=jks

##PKCS11 options
##Set the value of following properties to use PKCS11 enabled devices to store SDI servers private key / certificate.
com.ibm.di.pkcs11cfg=etc/pkcs11.cfg
com.ibm.di.server.pkcs11=false
com.ibm.di.server.pkcs11.library=
com.ibm.di.server.pkcs11.slot=
{protect}-com.ibm.di.server.pkcs11.password={encr}nhInU9de7Ay/KHPgz97I2xmjYWzlum6l/iYv/Y2RWhCSk6Qqh0Rd278Sv3TZNkutLuu9kE994BTHhjOJcQ+Rfmmmz0UIXmE/zKJRcd3/SzMoiI7iU1C61KjE+MPmI/3LvVwV640uEIS9JPt617qQILQ983MStybo6skJ54s6keQ=

## Turns on java debug
# javax.net.debug=true

## java interpreter override
# com.ibm.di.javacmd=
# com.ibm.di.installdir=

## Limits the number of threads IDI uses
## Must be set higher than 3 to have any effect

# com.ibm.di.server.maxThreadsRunning=500

com.ibm.di.server.securemode=false

## Following properties modified in SDI 7.1 Added property for
## keystore password and keypassword
## com.ibm.di.server.keystore
## com.ibm.di.server.key.alias

##api.keystore=testserver.jks
##api.keystore.type=jks
##api.key.alias=server
##{protect}-api.keystore.password={encr}U02k+q62PBi0sVDrpH8jd0W4jJpuxPZecyOxD+qyiEKGLOuxU8ULNOH5TbCf4nXtmRsA2rQeFoD3jwPSw+bvxVEZHMcPqQZikL57VOSls+S0HFD+p7eXq31SKRSTD9g9dIjQL4yr3bfXJYHXSutYRxyOpWRH4btKun+u8NcaREg=
##{protect}-api.key.password={encr}

## Encryption properties added in SDI 7.1
##com.ibm.di.server.encryption.keystore = testserver.jks
##com.ibm.di.server.encryption.key.alias = server
##com.ibm.di.server.encryption.keystoretype = jks
##com.ibm.di.server.encryption.transformation = RSA

## Web container
##web.server.port=1098
##web.server.ssl.on=true
##web.server.ssl.client.auth.on=false
# web.server.session.timeout=300

## Touchpoint Server properties
tp.server.on=false
tp.server.config=etc/tp.xml
tp.server.auth=false
tp.server.auth.realm=Security Directory Integrator Touchpoint Server

## Dashboard properties
##
dashboard.on=true
dashboard.templates.folder=dashboard/templates

## Dashboard authentication properties
##
## The values for localhost and remotehost can be:
##	none: No authentication is required
##	deny: All connections denied
##	ldap: Authentication is done by logging into an LDAP server and optionally validating group membership
##	properties: Authentication is done using dashboard.auth.user.[username]=[password] properties

## dashboard.ldap.url
##   Specify the LDAP host port and optionally a search base (ldap://<host>:<port>[/<search-base>])
##
## dashboard.ldap.url.group
##   Specify the LDAP host port and optionally a search base (ldap://<host>:<port>[/<search-base>])
##
dashboard.auth=true
dashboard.auth.localhost=properties
dashboard.auth.remote=deny
# dashboard.auth.ldap.url=ldap://localhost:389/ou=users,ou=system
# dashboard.auth.ldap.url.group=ldap://localhost:389/cn=group1,ou=groups,ou=system
#
# Default FDS username/password
##{protect}-dashboard.auth.user.admin={encr}fRfMfWw+r2bMveHYKvuuZPUxt8F+Z2df185GW/7cC+FhciEcdNIDZRze2pZC4UzzB5c6n6sCoo7pYaeb/wWk5TvmrrpZgKOb4gJOAtaR3Q2pORkbsqpEHCTlsssb/842Sx5mhjoUEf5xXRuEOEHghG7hCdbfaJy9RznP9RGJ8iU=


## Server API properties
## ---------------------

api.on=true
api.audit.on=false
api.user.registry=serverapi/registry.txt
api.user.registry.encryption.on=false

api.remote.on=true
api.remote.ssl.on=true
api.remote.ssl.client.auth.on=true
api.remote.naming.port=1099
# api.remote.server.ports=8700-8900
##api.truststore=testserver.jks
##api.truststore.type=jks
##{protect}-api.truststore.pass={encr}WJi4X4L5cwpdOcymGXmFqNLVuEXQfsjWFx6cWyj49b+EhwhOh3ddsvaOjwnNJ7jcCA5NYYcKTR5tVEOUwaxhC5zS5YdbEyDe8B/yEhOJBbWQp4l/UBH/ykoXg+JqR0lxsE/gx7EpHVRz20lIKaqbheYu2ssXMODuzDYPvKmADhk=

## REST API
## ----------------------
##api.rest.on=true
##api.rest.auth=false
##api.rest.auth.realm=Security Directory Integrator REST API

##api.rest.jmsdriver.name=com.ibm.di.systemqueue.driver.ActiveMQ
##api.rest.jmsdriver.queue.sender.persistance=false
##api.rest.jmsdriver.queue.sender.timeToLive=60000
##api.rest.jmsdriver.param.jms.broker=vm://localhost?##brokerConfig=xbean:etc/activemq.xml
# api.rest.jmsdriver.auth.username
# api.rest.jmsdriver.auth.password

## The properties determine the default bind address and the remote bind address for the Server API.
## * means bind to all network interfaces. The Remote Bind Address overrides the Default one.
## Only one IP address should be set. No hostnames are accepted.
## Mind that the java.rmi.server.hostname property is set implicitly to equal the Remote Bind Address property when used.
##This will cause the client stubs to create sockets on the specified Remote Bind Address.
# com.ibm.di.default.bind.address=*
# api.remote.bind.address=*

## Specifies a list of IP addresses to accept non SSL connections from (host names are not accepted).
## Use space, comma or semicolon as delimiter between IP addresses. This property is only taken into account
## when api.remote.ssl.on is set to false.
## api.remote.nonssl.hosts=

api.jmx.on=false
api.jmx.remote.on=false

## The configuration files placed in this folder can be edited through the Server API.
## Configuration files placed in other folders cannot be edited through the Server API.
api.config.folder=configs

## Timeout in minutes for configuration locks. A value of 0 means no timeout.
api.config.lock.timeout=0

## Timeout in minutes for loading a configuration.
api.config.load.timeout=2

## Specifies if the Server API methods for custom method invocation (Session.invokeCustom(...)) are allowed to be used.
## When api.custom.method.invoke.on is set to false and the Server API methods for custom method invocation are used,
## then an exception will be thrown.
## Only classes listed in api.custom.method.invoke.allowed.classes are allowed to be directly invoked.
## The default value is false.
api.custom.method.invoke.on=false

## Specifies the list of classes which can be directly invoked by the Server API methods for custom
## method invocation (Session.invokeCustom(...)).
## This property is only taken into account if api.custom.method.invoke.on is set to true.
## The classes in this list must be separated by a space, a comma or a semicolon.
## Example:
## api.custom.method.invoke.allowed.classes=com.ibm.MyClass,com.ibm.MyOtherClass
## In the above example only methods from the com.ibm.MyClass and com.ibm.MyOtherClass classes are
## allowed to be directly invoked.
api.custom.method.invoke.allowed.classes=

## Specifies a list of Server notification types, which will be suppressed.
## Notifications of suppressed types will not be propagated by the notifications framework.
## The notification types in the list are separated by spaces. Wildcards may be included.
## Example:
## api.notification.suppress=di.al.* di.ci.start
## The above example will suppress all Assembly Line related notifications as well as
## notifications for starting a configuration instance.
## If the property is missing or is empty, no notifications will be suppressed.
api.notification.suppress=di.server.api.authenticate di.server.api.authorize.*

## api.custom.authentication points to a JavaScript text file that contains custom authentication code.
## For example: api.custom.authentication=ldap_auth.js.
## To enable the built-in LDAP Authentication mechanism, set this property to "[ldap]".
## To enable the built-in JAAS Authentication mechanism, set this property to "[jaas]".
## For example: api.custom.authentication=[ldap]

##api.custom.authentication=[ldap]

## LDAP Authnetication properties
## ---------------------

## If this parameter is set to "true" and the LDAP Authnetication initialization fails, the whole Server API will not be started.
## If this parameter is missing or is set to "false" any LDAP Authentication initialization errors will be logged and the Server API will be started.
api.custom.authentication.ldap.critical=false

## LDAP Server hostname.
api.custom.authentication.ldap.hostname=

## LDAP server port number. For example, 389 for non-SSL or 636 for SSL.
api.custom.authentication.ldap.port=

## Specifies whether SSL is used to communicate with the LDAP Server.
## When set to "true" SSL will be used, otherwise SSL will not be used.
api.custom.authentication.ldap.ssl=

## Specifies the LDAP directory location where user searches will be preformed.
## When this property is not specified user searches will not be performed.
api.custom.authentication.ldap.searchbase=

## Specifies the user id attribute to be used in searches.
## When this property is not specified user searches will not be performed.
api.custom.authentication.ldap.userattribute=

## Specifies an LDAP Server administrator distinguished name that will be used for user searches.
## When this property is not specified anonymous bind will be used for user searches.
api.custom.authentication.ldap.admindn=

## Password for the LDAP Server administrator distinguished name.
{protect}-api.custom.authentication.ldap.adminpassword={encr}

## This property specifies whether LDAP Group authentication is turned on.
## If it is set to 'true', the group membership of the authenticating user will be resolved and will be taken into account during authorization.
## If it is missing, the default value 'false' is used.
api.custom.authentication.ldap.groupsupport=false

## Specifies the name of the attribute of a user in LDAP that contains a list of the groups of which the user is a member.
## It is taken into account only if 'api.custom.authentication.ldap.groupsupport' is set to true.
api.custom.authentication.ldap.usermembershipattribute=

## Specifies how groups are named in the membership attribute of a user.
## For example, if the user's membership attribute contains values, which correspond to the 'objectSID' attributes of groups, set this property to 'objectSID'.
## If the user's membership attribute contains distinguished names of groups, then set this property to 'dn'.
## The property is required in case 'api.custom.authentication.ldap.groupsupport' is set to true.
api.custom.authentication.ldap.usermembershipattributecontent=

## Specifies the name of a group's attribute in LDAP, which corresponds to the way the group is named in the SDI User Registry.
## For example, if LDAP groups are addressed in the SDI registry by their common name, then set this property to 'cn'.
## If the User Registry contains the distinguished names of the groups, then set this property to 'dn'.
api.custom.authentication.ldap.groupnameattribute=

## Represents the LDAP directory context, where groups will be searched.
## It is required only when LDAP group support is enabled
api.custom.authentication.ldap.groupsearchbase=

## Optional property, which represents a list of space-separated attribute names. Specifies attributes which have non-string syntax.
## api.custom.authentication.ldap.binaryattributes=

## JAAS Authnetication properties
## ---------------------
java.security.auth.login.config=

## Enabling/Disabling FIPS Mode in SDI
##------------------------------------
## If the below property is set to true then SDI will be enforced to run in FIPS Compliant Mode.
## The default value is false, i.e. SDI will not run in FIPS Mode by default.
com.ibm.di.server.fipsmode.on=false

## Specify the unique ID for the SDI Server
## ----------------------------------------
## This property helps a client connecting to the SDI server to identify different servers
## running on the same IP and the same port in different time. (Default is DEFAULT_ID)
com.ibm.di.server.id=DEFAULT_ID

## Tombstone Manager properties
## ---------------------

com.ibm.di.tm.on=false
com.ibm.di.tm.autodel.age=0
com.ibm.di.tm.autodel.records.trigger.on=10000
com.ibm.di.tm.autodel.records.max=5000
com.ibm.di.tm.create.all=false


## ----------------------
## Help system properties
## ----------------------

## Name of help server. The Tivoli library is at the following URL:
## http://publib.boulder.ibm.com/infocenter/tivihelp/v2r1/index.jsp?topic=/com.ibm.IBMDI.doc_7.2/welcome.htm
com.ibm.di.helpHost=publib.boulder.ibm.com/infocenter/tivihelp/v2r1/index.jsp?topic=

## Port for help system
com.ibm.di.helpPort=80

## --------------------------------------------
## AssemblyLinePool: Connector pooling defaults
## --------------------------------------------
##
## Note! These settings are only used when an AssemblyLine uses
## an AssemblyLinePool in combination with a Server mode connector.

## The number of seconds before a pooled connector times (e.g. is closed and no longer reused)
##      Less than zero means disable connector pooling
##		Zero means never timeout
##		Greater than zero sets the number of seconds before a connector is closed
com.ibm.di.server.connectorpooltimeout=42

## Comma separated list of connector interfaces that we never pool
com.ibm.di.server.connectorpoolexclude=com.ibm.di.connector.FileConnector,com.ibm.di.connector.ScriptConnector


## Properties for Windows IPv6 communications.
## Uncomment these properties for Windows IPv6 communication only.
## These properties will not affect IPv4 communication or IPv6 communication on Unices.
#java.net.preferIPv4Stack=false
#java.net.preferIPv6Addresses=true

## --------------------------------------------
## Performance settings
## --------------------------------------------
##
## Enable/Disable performance logging
com.ibm.di.server.perfStats=false

### ------------------------------------------
### Used by Config Report
###-------------------------------------------
### set this is you want to override the local language for Config Reports
# com.ibm.di.admin.configreport.translation=en

##----------------------
## System Queue settings
##----------------------
## If set to "true" the System Queue is initialized on startup and can be used;
## otherwise the System Queue is not initialized and cannot be used.
systemqueue.on=false

## Specifies the fully qualified name of the class that will be used as a JMS Driver.
# systemqueue.jmsdriver.name=com.ibm.di.systemqueue.driver.IBMMQ
# ##systemqueue.jmsdriver.name=com.ibm.di.systemqueue.driver.JMSScriptDriver
systemqueue.jmsdriver.name=com.ibm.di.systemqueue.driver.ActiveMQ
##JimG-update 11/11/2019
### MQ JMS driver initialization properties
##systemqueue.jmsdriver.param.jms.broker=mopbz171043.fr.dst.ibm.com
##systemqueue.jmsdriver.param.jms.serverChannel=IDPROV.SYNC.CLIENT
##systemqueue.jmsdriver.param.jms.qManager=IDPROVTEST
###systemqueue.jmsdriver.param.jms.sslCipher=TLS_RSA_WITH_AES_256_CBC_SHA256
 systemqueue.jmsdriver.param.jms.sslUseFlag=true
###mq_cts_ssl_cipher_suite:SSL_RSA_WITH_AES_256_CBC_SHA256=MQCipherSpec(TLS_RSA_WITH_AES_256_CBC_SHA256)

    com.ibm.di.SSLProtocols=TLSv1,TLSv1.1,TLSv1.2
    ##com.ibm.di.SSLServerProtocols=TLSv1,TLSv1.1,TLSv1.2
    ##com.ibm.jsse2.overrideDefaultProtocol=TLSv12
    ##com.ibm.jsse2.overrideDefaultTLS=true

##add Workaround for PI84184 0 java property
###-Djava.util.Arrays.useLegacyMergeSort=true

### JMS Javascript driver initialization properties
## Specifies the location of the script file
# systemqueue.jmsdriver.param.js.jsfile=driver.js

### ActiveMQ driver initialization properties
## Specifies the location of the ActiveMQ initialization file.
## This file is used to initialize ActiveMQ on SDI server startup.
systemqueue.jmsdriver.param.jms.broker=vm://localhost?brokerConfig=xbean:etc/activemq.xml

## This is the place to put any JMS provider specific properties needed by a JMS Driver,
## which connects to a 3rd party JMS system.
## All JMS Driver properties should begin with the 'systemqueue.jmsdriver.param.' prefix.
## All properties having this prefix are passes to the JMS Driver on initialization after
## removing the 'systemqueue.jmsdriver.param.' prefix from the property name.
# systemqueue.jmsdriver.param.user.param1=value1
# systemqueue.jmsdriver.param.user.param2=value2
# ...

## Credentials used for authenticating to the target JMS system
# {protect}-systemqueue.auth.username=<username>
# {protect}-systemqueue.auth.password=<password>

## ---------------------------------------------
## Logging settings
## ---------------------------------------------

## When false, all log calls made through the SDI Log class will be discarded.
com.ibm.di.logging.enabled=true



## ---------------------------------------------
## IBM JavaScript Engine settings
## ---------------------------------------------

## Set the type of platform - required by the IBM JS Engine when caching is used.
com.ibm.commons.platform=com.ibm.commons.platform.GenericPlatform

##
## Set this property to a directory to enable auto dumps of assemblylines that fails
##
# com.ibm.tdi.autodump.directory=<dump-directory>



##
## Server API client properties
##
##api.client.ssl.custom.properties.on=true
##api.client.keystore=serverapi/testadmin.jks
##{protect}-api.client.keystore.pass={encr}Urwke+D9jjCDpV9KW0jVPgZl62lIdZCTq53atXvUXalnAXxvvjdCg2nNE1Y0vYFH/Bdd3iepJ2Y0CvjJh6/k2k+1ENpqnjyzgAUbumd8C6dBAbo9L30zkpOVtNd6VC4kGcsGRIPaTk7IdLfEM7ZW3tLY+nQhCDiMOsF1gUP7PUk=
##api.client.keystore.type=jks
##{protect}-api.client.key.pass={encr}AhuxKH/dnfyk/TugHF36bAyJEgUDsxX6SAb/z7X8R02B1NrNe81Ic8xM/lVFjYz9mimAGvS66yUbWWS5Sh69jq1AhsOWpNIesRh+cuizilc2blpBf+wt39WHBdXlYWBgBXwoNjOrUmmybk9j+c8S94wUBqSEucMs3XmXfmbQiD8=
##api.client.truststore=serverapi/testadmin.jks
##{protect}-api.client.truststore.pass={encr}SWZ8ypGkdgFAh2sJ6YGGKXPww02Rvu5+19RzSJdeip6kC/+6YwzcSyYROmm0b84gn/gxcJBk9IepAfGMii4FJ7CNriynvBsCHKRhjvs42EZWrW8P1/fYShO/LBm+Z+95q7Fm2JSO9eKTOx41QXPzjda+DqUzXsD51YtCCgjZcJU=
##api.client.truststore.type=jks

## ----------------------------------
## Mail properties
## ----------------------------------

## This property needs to be set to a valid SMTP host to be able
## to send mail using the system methods.
## mail.smtp.host=

## ----------------------------------
## Enabling/Disabling NIST Mode in SDI
##------------------------------------
## If the below property is set to true then SDI will be enforced to run in NIST Compliant Mode.
## The default value is false, i.e. SDI will not run in NIST Mode by default.
com.ibm.di.server.NIST.on=false
